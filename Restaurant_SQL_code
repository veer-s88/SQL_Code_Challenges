-- 1
-- return list of first name, last name and email of all customers    
SELECT FirstName, LastName, Email FROM Customers
    ORDER BY LastName, FirstName;
    
-- 2
-- create table to store response info
CREATE TABLE Attendees ('Customer_ID' INTEGER, 'Party_Size' INTEGER);

-- 3
-- create three menu tables: price menu, appetizer menu, without drinks menu
SELECT * FROM Dishes ORDER BY Price;
SELECT * FROM Dishes WHERE Type IN ('Beverage', 'Appetizer') ORDER BY Type; 
SELECT * FROM Dishes WHERE Type <> 'Beverage' ORDER BY Type;

-- 4
-- Insert data into customer table
INSERT INTO Customers (FirstName, LastName, Email, Address, City, State, Phone, Birthday)
    VALUES('Anna', 'Smith', 'asmith@kinetecoinc.com', '479 Lapis Dr.', 'Memphis', 'TN', '(555) 555-1212', '1973-07-21');
;

-- 5
-- Update customer's address
UPDATE Customers SET Address = '74 Pine St.', City = 'New York', State = 'NY' WHERE CustomerID=26;
SELECT * FROM Customers;

-- 6
-- Remove a customer's record
DELETE FROM Customers WHERE CustomerID=4;
SELECT * FROM Customers;

-- 7
-- Log customer responses for anniversary attendees
INSERT INTO Attendees (CustomerID, PartySize)
    VALUES ((SELECT CustomerID FROM Customers WHERE Email='atapley2j@kinetecoinc.com'), 4);
SELECT * FROM Attendees;

-- 8
-- Look up reservations
SELECT * FROM(
    SELECT r.ReservationID, r.Date, r.PartySize, c.CustomerID, c.FirstName, c.LastName
        FROM Reservations AS r 
        JOIN Customers AS c
        ON r.CustomerID = c.CustomerID)
    WHERE LastName LIKE 'St%n'
    ORDER BY Date
    ; 

-- 9
-- Make a reservation
INSERT INTO Customers(FirstName, LastName, Email, Phone)
    VALUES('Sam', 'McAdams', 'smac@rouxacademy.com', '555-555-1212');

SELECT * FROM Customers WHERE FirstName='Sam';

SELECT * FROM Reservations;

INSERT INTO Reservations(CustomerID, Date, PartySize)
    VALUES((SELECT CustomerID FROM Customers WHERE FirstName='Sam'), '2020--07-14 18:00:00', 5);

SELECT * FROM Reservations WHERE Date='2020--07-14 18:00:00';

-- 10
-- Take a delivery order
SELECT * FROM OrdersDishes;
SELECT * FROM Orders;
SELECT * FROM Dishes;

SELECT CustomerID FROM Customers WHERE FirstName='Loretta';
INSERT INTO Orders(CustomerID, OrderDate) VALUES((SELECT CustomerID FROM Customers WHERE FirstName='Loretta'), DATETIME('now'));

INSERT INTO OrdersDishes (OrdersDishesID, OrderID, DishID) VALUES (4022, (SELECT Orderid FROM Orders WHERE CustomerID=70 ORDER BY OrderDate DESC LIMIT 1),
                                                                    (SELECT DishID FROM Dishes WHERE Name='House Salad'));
INSERT INTO OrdersDishes (OrdersDishesID, OrderID, DishID) VALUES (4023, (SELECT Orderid FROM Orders WHERE CustomerID=70 ORDER BY OrderDate DESC LIMIT 1),
                                                                    (SELECT DishID FROM Dishes WHERE Name='Mini Cheeseburgers'));
INSERT INTO OrdersDishes (OrdersDishesID, OrderID, DishID) VALUES (4024, (SELECT Orderid FROM Orders WHERE CustomerID=70 ORDER BY OrderDate DESC LIMIT 1),
                                                                    (SELECT DishID FROM Dishes WHERE Name='Tropical Blue Smoothie'));

SELECT SUM(d.Price)
    FROM (SELECT * FROM OrdersDishes WHERE OrderID=1001) AS o
    JOIN Dishes as d
    ON d.DishID = o.DishID;

SELECT OrderID, Price, SUM(Price) AS 'Total Cost of Order' FROM
(SELECT o.OrdersDishesID, o.OrderID, o.DishID, d.Price, d.Name FROM OrdersDishes as o
JOIN Dishes AS d
ON d.DishID = o.DishID)
GROUP BY OrderID
HAVING OrderID=1001
;

-- 11
-- track Customers favourite dishes
UPDATE Customers 
    SET FavoriteDish = (SELECT DishID FROM Dishes WHERE Name = 'Quinoa Salmon Salad')
    WHERE FirstName = 'Cleo';

-- 12
-- Prepare a report of your top five customers
SELECT p.CustomerID, p.no_orders, c.FirstName, c.LastName, c.Email FROM
    (SELECT CustomerID, COUNT(OrderID) AS no_orders FROM Orders
    GROUP BY CustomerID
    ORDER BY no_orders DESC
    LIMIT 5) AS p
    
    JOIN Customers as c
    ON p.CustomerID = c.CustomerID;

